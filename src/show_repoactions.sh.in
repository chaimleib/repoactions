#!/bin/bash
# This script may be run standalone or source-d.

# If there is an executable repoactions.sh at the root of the git repo, AND the
# git repo is in the whitelist, we echo the name of the repo, followed by a
# vertical pipe, and then the path to repoactions.sh script. Otherwise, we echo
# nothing.

# if ! type _repoactions_main &>/dev/null; then
function _repoactions_usage() {
    echo "repoactions v@version@"
    echo "@url@"
    echo "repoactions - run script on entering a git repo"
    echo "Usage: show_repoactions -[hvce]"
    echo ""
    echo "Options:"
    echo "  e      Echoes projId|path/to/proj/repoactions.sh"
    echo "  c      Create config files, if not present"
    echo "  h, v   Show this message"
}

function _repoactions_main() {
    if ! [ -n "$1" ]; then
        _repoactions_usage
        return
    fi
    case "$1" in
    '-'[hv])
        _repoactions_usage
        return
        ;;
    '-c')
        _repoactions_create_configs
        return
        ;;
    '-e')
        _repoactions_echo
        return
        ;;
    *)
        _repoactions_usage >&2
        return 1
        ;;
    esac
}

function _repoactions_echo() {
    if ! [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" == "true" ]; then
        return
    fi

    projdir="$(git rev-parse --show-toplevel 2>/dev/null)"

    # Get the project id to determine whitelist status
    proj="$(git config --get remote.origin.url 2>/dev/null)"
    [ -n "$proj" ] || proj="$projdir"

    script="${projdir}/repoactions.sh"
    if ! [ -x "$script" ]; then
        return
    fi

    # Success!
    if _repoactions_is_listed "$proj" whitelist; then
        echo "${proj}|${script}"
        return
    fi

    # Not in whitelist
    if _repoactions_is_listed "$proj" ignore; then
        return
    fi

    # Not in ignore list
    cat << EOF >&2
repoactions: found $script
To enable it, add its project to the whitelist:

    echo "$proj" >> "$(_repoactions_config whitelist)"

Or, to silence this message without enabling the repoactions script:

    echo "$proj" >> "$(_repoactions_config ignore)"
EOF
}

function _repoactions_is_listed() {
    local projId="$1"
    local list="$(_repoactions_config $2)"
    if ! [ -f "$list" ]; then
        return 1
    fi
    while read -r line; do
        if [ "$line" == "$projId" ]; then
            return
        fi
    done < "$list"
    return 1
}

function _repoactions_config() {
    local config_dir="${HOME}/.config/repoactions"
    if [ -n "$1" ]; then
        echo "$config_dir/$1"
        return
    fi
    echo "$config_dir"
}

function _repoactions_create_configs() {
    local cfgDir="$(_repoactions_config)"
    if ! [ -d "$cfgDir" ]; then
        mkdir -p "$cfgDir"
    fi
    local whitelist="$(_repoactions_config whitelist)"
    if ! [ -f "$whitelist" ]; then
        touch "$whitelist"
    fi
    local ignore="$(_repoactions_config ignore)"
    if ! [ -f "$ignore" ]; then
        touch "$ignore"
    fi
}
# fi

if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    # script is not being sourced; pass args to _repoactions_main
    _repoactions_main "$@"
fi

